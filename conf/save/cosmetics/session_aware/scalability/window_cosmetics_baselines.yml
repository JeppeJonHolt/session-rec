type: window # opt|single|window
key: baseline #added to the csv names
evaluation: evaluation_user_based #evaluation|evaluation_last|evaluation_multiple|evaluation_next_multiple|evaluation_user_based_next|evaluation_user_based_multiple
data:
  name: cosmetics #added in the end of the csv names
  folder: data/cosmetics/prepared_window/sampled/
  prefix: interactions
  type: hdf #hdf (if there is no type, the default is csv)
  slices: 5
  skip: [0,2,3,4] # we need only slice 1

results:
  folder: results/window/scalability/cosmetics/

metrics:
- class: time_memory_usage.Time_usage_training
- class: time_memory_usage.Time_usage_testing
- class: time_memory_usage.Memory_usage

algorithms:
# SR
- class: baselines.sr.SequentialRules
  params: { steps: 15, weighting: div }
  key: sr
- class: baselines.usr.USequentialRules
  params: { steps: 15, weighting: div, boost_own_sessions: 3.7 , reminders: True, remind_strategy: 'hybrid', remind_sessions_num: 9, weight_base: 8, weight_IRec: 3 }
  key: sr_BR
# VSKNN
- class: knn.vsknn.VMContextKNN
  params: { k: 100, sample_size: 10000, weighting: quadratic , weighting_score: div, idf_weighting: 10 }
  key: vsknn
- class: knn.uvsknn.UVMContextKNN
  params: { k: 1500, sample_size: 10000, weighting: quadratic , weighting_score: div, idf_weighting: 10, extend_session_length: 2, boost_own_sessions: 0.9, reminders: True, remind_strategy: 'hybrid', remind_sessions_num: 10, weight_base: 9, weight_IRec: 2, weight_SSim: 3 }
  key: vsknn_EBR
# STAN
- class: knn.stan.STAN
  params: { k: 500, sample_size: 2500, lambda_spw: 0.905 , lambda_snh: 40, lambda_inh: 0.4525 }
  key: stan
- class: knn.ustan.USTAN
  params: { k: 1500, sample_size: 5000, lambda_spw: 0.905 , lambda_snh: 100, lambda_inh: 7.24 , extend_session_length: 2, boost_own_sessions: 1.9, reminders: True, remind_strategy: 'hybrid', remind_sessions_num: 4, weight_base: 10, weight_IRec: 1, weight_SSim: 1 }
  key: stan_EBR
# VSTAN
- class: knn.vstan.VSKNN_STAN
  params: { k: 500, sample_size: 1000 , similarity: 'cosine', lambda_spw: 3.62, lambda_snh: 80, lambda_inh: 0.4525, lambda_ipw: 0.905, lambda_idf: False }
  key: vstan
- class: knn.uvstan.U_VSKNN_STAN
  params: { k: 500, sample_size: 1000 , similarity: 'cosine', lambda_spw: 0.905, lambda_snh: 80, lambda_inh: 0.4525, lambda_ipw: 3.62, lambda_idf: 1, extend_session_length: 1, boost_own_sessions: 3.1, reminders: True, remind_strategy: 'hybrid', remind_sessions_num: 5, weight_base: 7, weight_IRec: 1, weight_SSim: 0 }
  key: vstan_EBR