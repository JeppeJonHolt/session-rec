type: window # opt|single|window
key: vstan_EB #added to the csv names
evaluation: evaluation_user_based #evaluation|evaluation_last|evaluation_multiple|evaluation_next_multiple|evaluation_user_based_next|evaluation_user_based_multiple
data:
  name: cosmetics #added in the end of the csv names
  folder: data/cosmetics/prepared_window/sampled/
  prefix: interactions
  type: hdf #hdf (if there is no type, the default is csv)
  slices: 5

results:
  folder: results/window/cosmetics/uvstan/EB/

metrics:
- class: accuracy_multiple.Precision
  length: [3,5,10,15,20]
- class: accuracy_multiple.Recall
  length: [3,5,10,15,20]
- class: accuracy_multiple.MAP
  length: [3,5,10,15,20]
- class: accuracy_multiple.NDCG
  length: [3,5,10,15,20]
- class: accuracy.HitRate
  length: [3,5,10,15,20]
- class: accuracy.MRR
  length: [3,5,10,15,20]
- class: coverage.Coverage
  length: [20]
- class: popularity.Popularity
  length: [20]

algorithms:
# uvstan_EB-k=500-sample_size=1000-similarity=cosine-lambda_spw=0,905-lambda_snh=80-lambda_inh=0,4525-lambda_ipw=3,62-lambda_idf=1-extend_session_length=1-boost_own_sessions=3,1
- class: knn.uvstan.U_VSKNN_STAN
  params: { k: 500, sample_size: 1000 , similarity: 'cosine', lambda_spw: 0.905, lambda_snh: 80, lambda_inh: 0.4525, lambda_ipw: 3.62, lambda_idf: 1, extend_session_length: 1, boost_own_sessions: 3.1 }
  key: vstan_EB