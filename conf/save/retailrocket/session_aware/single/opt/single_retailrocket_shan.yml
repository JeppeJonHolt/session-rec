---
type: opt # single|window, maybe add opt
key: shan #added to the csv names
evaluation: evaluation_user_based #evaluation|evaluation_last|evaluation_multiple|evaluation_user_based|evaluation_user_based_multiple
data:
  name: retailrocket #added in the end of the csv names
  folder: data/retailrocket/prepared/
  prefix: events
  type: hdf #hdf (if there is no type, the default is csv)

results:
  folder: results/opt/retailrocket/shan/

metrics:
- class: accuracy_multiple.Precision
  length: [5,10,15,20]
- class: accuracy_multiple.Recall
  length: [5,10,15,20]
- class: accuracy_multiple.MAP
  length: [5,10,15,20]
- class: accuracy.HitRate
  length: [5,10,15,20]
- class: accuracy.MRR
  length: [5,10,15,20]

optimize:
  class: accuracy.MRR
  length: [20]
  iterations: 100 #optional

algorithms:
- class: shan.shan.SHAN # small network, the TOP1 loss always outperformed other ranking losses, so we consider only it
  params: {iter: 100, global_dimension: 100}
  params_opt:
    lambda_uv: [{from: 0.0001, to: 0.001, in: 10, type: float32}, {from: 0.001, to: 0.01, in: 10, type: float32}]  # [0.01, 0.001, 0.0001]
    lambda_a:  [1,10,50] # [1, 10, 50]
  key: shan

# todo: iter: 100 & neg_number: (default: 10) & learning_rate=0.1