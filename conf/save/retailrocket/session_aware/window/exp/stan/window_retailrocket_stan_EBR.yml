type: window # opt|single|window
key: stan_EBR #added to the csv names
evaluation: evaluation_user_based #evaluation|evaluation_last|evaluation_multiple|evaluation_next_multiple|evaluation_user_based_next|evaluation_user_based_multiple
data:
  name: retailrocket #added in the end of the csv names
  folder: data/retailrocket/prepared_window/
  prefix: events
  type: hdf #hdf (if there is no type, the default is csv)
  slices: 5

results:
  folder: results/window/retailrocket/ustan/EBR/

metrics:
- class: accuracy_multiple.Precision
  length: [3,5,10,15,20]
- class: accuracy_multiple.Recall
  length: [3,5,10,15,20]
- class: accuracy_multiple.MAP
  length: [3,5,10,15,20]
- class: accuracy_multiple.NDCG
  length: [3,5,10,15,20]
- class: accuracy.HitRate
  length: [3,5,10,15,20]
- class: accuracy.MRR
  length: [3,5,10,15,20]
- class: coverage.Coverage
  length: [20]
- class: popularity.Popularity
  length: [20]
- class: time_memory_usage.Time_usage_training
- class: time_memory_usage.Time_usage_testing
#- class: time_memory_usage.Memory_usage

algorithms:
# stan_EBR-k=2000-sample_size=2500-lambda_spw=0,4525-lambda_snh=100-lambda_inh=0,905-extend_session_length=2-boost_own_sessions=0,3-reminders=True-remind_strategy=hybrid-remind_sessions_num=3-weight_base=4-weight_IRec=1-weight_SSim=0
- class: knn.ustan.USTAN
  params: { k: 2000, sample_size: 2500, lambda_spw: 0.4525 , lambda_snh: 100, lambda_inh: 0.905 , extend_session_length: 2, boost_own_sessions: 0.3, reminders: True, remind_strategy: 'hybrid', remind_sessions_num: 3, weight_base: 4, weight_IRec: 1, weight_SSim: 0 }
  key: stan_EBR