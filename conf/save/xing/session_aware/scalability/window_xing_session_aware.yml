type: window # opt|single|window
key: session_aware #added to the csv names
evaluation: evaluation_user_based #evaluation|evaluation_last|evaluation_multiple|evaluation_next_multiple|evaluation_user_based_next|evaluation_user_based_multiple
data:
  name: xing #added in the end of the csv names
  folder: data/xing/xing2016/prepared_window/
  prefix: interactions # slice with maximum number of users
  type: hdf #hdf (if there is no type, the default is csv)
  slices: 5
  skip: [0,1,2,4] # we need only slice 3

results:
  folder: results/window/scalability/xing/

metrics:
- class: time_memory_usage.Time_usage_training
- class: time_memory_usage.Time_usage_testing
- class: time_memory_usage.Memory_usage

algorithms:
# HGRU4Rec
- class: hgru4rec.hgru4rec.HGRU4Rec
  params: { final_act: 'tanh', dropout_p_hidden_usr: 0.8, dropout_p_hidden_ses: 0.0, dropout_p_init: 0.6, momentum: 0.6, learning_rate: 0.08, user_propagation_mode: 'all', batch_size: 100 }
  key: hgru4rec
# IIRNN
- class: IIRNN.ii_rnn.IIRNN
  params: { learning_rate: 0.002, dropout_pkeep: 0.6, embedding_size: 100, max_session_representation: 1, max_epoch: 20, use_last_hidden_state: False}
  key: ii_rnn
# NCFS
- class: NCFS.ncfs.NCFS
  params: { window_sz: 2, max_nb_his_sess: 0, att_alpha: 10 }
  key: ncfs
# NSAR
- class: nsar.nsar.NSAR # small network, the TOP1 loss always outperformed other ranking losses, so we consider only it
  params: {num_epoch: 20, learning_rate: 0.004, hidden_units: 100, batch_size: 32}
  key: nsar
# SHAN
- class: shan.shan.SHAN
  params: {iter: 100, global_dimension: 100, lambda_uv: 0.01, lambda_a: 1}
  key: shan
